{"remainingRequest":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\docs\\frontend\\css.md?vue&type=template&id=40486a26&","dependencies":[{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\docs\\frontend\\css.md","mtime":1539657926644},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1539225403889},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1539225403889},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h2 id=\\\"比较字符串\\\"><a href=\\\"#比较字符串\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 比较字符串</h2> <h2 id=\\\"难度：简单\\\"><a href=\\\"#难度：简单\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 难度：简单</h2> <h2 id=\\\"描述：\\\"><a href=\\\"#描述：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 描述：</h2> <p>比较两个字符串 A 和 B，确定 A 中是否包含 B 中所有的字符。字符串 A 和 B 中的字符都是 大写字母</p> <h2 id=\\\"样例：\\\"><a href=\\\"#样例：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 样例：</h2> <p>给出 A = &quot;ABCD&quot; B = &quot;ACD&quot;，返回 true</p> <p>给出 A = &quot;ABCD&quot; B = &quot;AABC&quot;， 返回 false</p> <h3 id=\\\"代码模板：\\\"><a href=\\\"#代码模板：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 代码模板：</h3> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">/**\\n * @param A: A string\\n * @param B: A string\\n * @return: if string A contains all of the characters in B return true else return false\\n */</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">compareStrings</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">A</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">B</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br></div></div><h3 id=\\\"思路分析：\\\"><a href=\\\"#思路分析：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 思路分析：</h3> <p>将字符串转成数组来处理</p> <h3 id=\\\"想一想再看答案\\\"><a href=\\\"#想一想再看答案\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 想一想再看答案</h3> <h3 id=\\\"想一想再看答案-2\\\"><a href=\\\"#想一想再看答案-2\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 想一想再看答案</h3> <h3 id=\\\"想一想再看答案-3\\\"><a href=\\\"#想一想再看答案-3\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 想一想再看答案</h3> <h3 id=\\\"代码：\\\"><a href=\\\"#代码：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 代码：</h3> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">compareStrings</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">A</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">B</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token punctuation\\\">[</span><span class=\\\"token constant\\\">A</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">B</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">...</span><span class=\\\"token constant\\\">A</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">...</span><span class=\\\"token constant\\\">B</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 转成数组操作</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> index <span class=\\\"token keyword\\\">of</span> <span class=\\\"token constant\\\">B</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">keys</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">A</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">B</span><span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">!==</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// B数组元素和A数组元素成功匹配</span>\\n      <span class=\\\"token constant\\\">A</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>find<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 删除A数组中已匹配到的，保持数量相等</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// B数组中有A不包含的字符串</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br><span class=\\\"line-number\\\">11</span><br><span class=\\\"line-number\\\">12</span><br></div></div><h3 id=\\\"鼓励我一下：\\\"><a href=\\\"#鼓励我一下：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 鼓励我一下：</h3> \"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"觉得还不错的话，给我的点个\"),_vm._ssrNode(\"<a href=\\\"https://github.com/OBKoro1/Brush_algorithm\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"star\"),_c('OutboundLink')],2),_vm._ssrNode(\"吧\")],2)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}