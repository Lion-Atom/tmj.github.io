{"remainingRequest":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\docs\\backend\\java\\utils\\base.md?vue&type=template&id=0d30b3dc&","dependencies":[{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\docs\\backend\\java\\utils\\base.md","mtime":1539244217877},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1539225403889},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1539225403889},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<p>'## BooleanUtil</p> <blockquote><p>布尔工具类（BooleanUtil）</p></blockquote> <h3 id=\\\"主要功能：\\\"><a href=\\\"#主要功能：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 主要功能：</h3> <ul><li>从String(true/false, yes/no)，转换为Boolean或boolean</li> <li>逻辑运算：取反，多个boolean的and,or计算</li></ul> <h3 id=\\\"api介绍：\\\"><a href=\\\"#api介绍：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> API介绍：</h3> <p><em>使用标准JDK，只分析是否忽略大小写的&quot;true&quot;, str为空时返回false</em></p> <ul><li>boolean toBoolean(String str)</li></ul> <p><em><strong>例子：</strong></em></p> <div class=\\\"language-java line-numbers-mode\\\"><pre class=\\\"language-java\\\"><code>BooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBoolean</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;True&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//true</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBoolean</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;trUe&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//true</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBoolean</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;yes&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\">//false</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br></div></div><hr> <p><em>使用标准JDK，只分析是否忽略大小写的&quot;true&quot;, str为空时返回null</em></p> <ul><li>Boolean toBooleanObject(String str)</li></ul> <p><em><strong>例子：</strong></em></p> <div class=\\\"language-java line-numbers-mode\\\"><pre class=\\\"language-java\\\"><code>BooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBooleanObject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;True&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//Boolean.TRUE</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBooleanObject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;trUe&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//Boolean.TRUE</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBooleanObject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;yes&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\">//Boolean.FALSE</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br></div></div><hr> <p><em>使用标准JDK，只分析是否忽略大小写的&quot;true&quot;, str为空时返回defaultValue</em></p> <ul><li>Boolean toBooleanObject(String str, Boolean defaultValue)</li></ul> <p><em><strong>例子：</strong></em></p> <div class=\\\"language-java line-numbers-mode\\\"><pre class=\\\"language-java\\\"><code>BooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBooleanObject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;True&quot;</span><span class=\\\"token punctuation\\\">,</span> Boolean<span class=\\\"token punctuation\\\">.</span>FALSE<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//Boolean.TRUE</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBooleanObject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;trUe&quot;</span><span class=\\\"token punctuation\\\">,</span> Boolean<span class=\\\"token punctuation\\\">.</span>FALSE<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//Boolean.TRUE</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBooleanObject</span><span class=\\\"token punctuation\\\">(</span>null<span class=\\\"token punctuation\\\">,</span> Boolean<span class=\\\"token punctuation\\\">.</span>TRUE<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\">//Boolean.TRUE</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBooleanObject</span><span class=\\\"token punctuation\\\">(</span>null<span class=\\\"token punctuation\\\">,</span> Boolean<span class=\\\"token punctuation\\\">.</span>FALSE<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\">//Boolean.FALSE</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br></div></div><hr> <p><em>支持true/false, on/off, y/n, yes/no的转换, str为空或无法分析时返回null</em></p> <ul><li>Boolean parseGeneralString(String str)</li></ul> <p><em><strong>例子：</strong></em></p> <div class=\\\"language-java line-numbers-mode\\\"><pre class=\\\"language-java\\\"><code>BooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span>null<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>   <span class=\\\"token comment\\\">//null</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;true&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//Boolean.TRUE</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;T&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>    <span class=\\\"token comment\\\">//Boolean.TRUE</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;false&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token comment\\\">//Boolean.FALSE</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;f&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>    <span class=\\\"token comment\\\">//Boolean.FALSE </span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;No&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>   <span class=\\\"token comment\\\">//Boolean.FALSE</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;n&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>    <span class=\\\"token comment\\\">//Boolean.FALSE </span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;on&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>   <span class=\\\"token comment\\\">//Boolean.TRUE</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;ON&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>   <span class=\\\"token comment\\\">//Boolean.TRUE</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;off&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\">//Boolean.FALSE</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;oFf&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\">//Boolean.FALSE</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;yes&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\">//Boolean.TRUE</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;Y&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>    <span class=\\\"token comment\\\">//Boolean.TRUE </span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;blue&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//null</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;true &quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token comment\\\">//null // trailing space (too long)</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;ono&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\">//null // does not match on or no</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br><span class=\\\"line-number\\\">11</span><br><span class=\\\"line-number\\\">12</span><br><span class=\\\"line-number\\\">13</span><br><span class=\\\"line-number\\\">14</span><br><span class=\\\"line-number\\\">15</span><br><span class=\\\"line-number\\\">16</span><br></div></div><hr> <p><em>支持true/false,on/off, y/n, yes/no的转换, str为空或无法分析时返回defaultValue</em></p> <ul><li>Boolean parseGeneralString(String str, Boolean defaultValue)</li></ul> <p><em><strong>例子：</strong></em></p> <div class=\\\"language-java line-numbers-mode\\\"><pre class=\\\"language-java\\\"><code>BooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span>Boolean<span class=\\\"token punctuation\\\">.</span>TRUE<span class=\\\"token punctuation\\\">,</span> Boolean<span class=\\\"token punctuation\\\">.</span>FALSE<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//true</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span>Boolean<span class=\\\"token punctuation\\\">.</span>FALSE<span class=\\\"token punctuation\\\">,</span> Boolean<span class=\\\"token punctuation\\\">.</span>TRUE<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//false</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parseGeneralString</span><span class=\\\"token punctuation\\\">(</span>null<span class=\\\"token punctuation\\\">,</span> Boolean<span class=\\\"token punctuation\\\">.</span>TRUE<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>          <span class=\\\"token comment\\\">//true</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br></div></div><hr> <p><em>取反</em></p> <ul><li>boolean negate(final boolean bool)</li></ul> <p><em><strong>例子：</strong></em></p> <div class=\\\"language-java line-numbers-mode\\\"><pre class=\\\"language-java\\\"><code>BooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">negate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\">//false;</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">negate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//true;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br></div></div><hr> <p><em>取反</em></p> <ul><li>Boolean negate(final Boolean bool)</li></ul> <p><em><strong>例子：</strong></em></p> <div class=\\\"language-java line-numbers-mode\\\"><pre class=\\\"language-java\\\"><code>BooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">negate</span><span class=\\\"token punctuation\\\">(</span>Boolean<span class=\\\"token punctuation\\\">.</span>TRUE<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\">//Boolean.FALSE;</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">negate</span><span class=\\\"token punctuation\\\">(</span>Boolean<span class=\\\"token punctuation\\\">.</span>FALSE<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//Boolean.TRUE;</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">negate</span><span class=\\\"token punctuation\\\">(</span>null<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>          <span class=\\\"token comment\\\">//null;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br></div></div><hr> <p><em>多个值的and</em></p> <ul><li>boolean and(final boolean... array)</li></ul> <p><em><strong>例子：</strong></em></p> <div class=\\\"language-java line-numbers-mode\\\"><pre class=\\\"language-java\\\"><code>BooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">and</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>         <span class=\\\"token comment\\\">//true</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">and</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>       <span class=\\\"token comment\\\">//false</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">and</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>        <span class=\\\"token comment\\\">//false</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">and</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\">//false</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">and</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>   <span class=\\\"token comment\\\">//true</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br></div></div><hr> <p><em>多个值的or</em></p> <ul><li>boolean or(final boolean... array)</li></ul> <p><em><strong>例子：</strong></em></p> <div class=\\\"language-java line-numbers-mode\\\"><pre class=\\\"language-java\\\"><code>BooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">or</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>          <span class=\\\"token comment\\\">//true</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">or</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>        <span class=\\\"token comment\\\">//false</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">or</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>         <span class=\\\"token comment\\\">//true</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">or</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>   <span class=\\\"token comment\\\">//true</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">or</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>    <span class=\\\"token comment\\\">//true</span>\\nBooleanUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">or</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//false</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br></div></div><hr> <h2 id=\\\"enumutil\\\"><a href=\\\"#enumutil\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> EnumUtil</h2> <blockquote><p>枚举工具类（EnumUtil）</p></blockquote> <h3 id=\\\"主要功能：-2\\\"><a href=\\\"#主要功能：-2\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 主要功能：</h3> <ul><li>将多个枚举值按bit保存到long中</li></ul> <h3 id=\\\"api介绍：-2\\\"><a href=\\\"#api介绍：-2\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> API介绍：</h3> <p><em>将若干个枚举值转换为long(按bits 1,2,4,8...的方式叠加)，用于使用long保存多个选项的情况.</em></p> <ul><li>&lt;E extends Enum&lt;E&gt;&gt; long generateBits(final Class&lt;E&gt; enumClass, final Iterable&lt;? extends E&gt; values)</li></ul> <p><em><strong>例子：</strong></em></p> <div class=\\\"language-java line-numbers-mode\\\"><pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">enum</span> Options <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tA<span class=\\\"token punctuation\\\">,</span> B<span class=\\\"token punctuation\\\">,</span> C<span class=\\\"token punctuation\\\">,</span> D\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\nEnumUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">generateBits</span><span class=\\\"token punctuation\\\">(</span>Options<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">class</span><span class=\\\"token punctuation\\\">,</span> Options<span class=\\\"token punctuation\\\">.</span>A<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//1l</span>\\nEnumUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">generateBits</span><span class=\\\"token punctuation\\\">(</span>Options<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">class</span><span class=\\\"token punctuation\\\">,</span> Options<span class=\\\"token punctuation\\\">.</span>A<span class=\\\"token punctuation\\\">,</span> Options<span class=\\\"token punctuation\\\">.</span>B<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//3l</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br></div></div><hr> <p><em>将若干个枚举值转换为long(按bits 1,2,4,8...的方式叠加)，用于使用long保存多个选项的情况.</em></p> <ul><li>&lt;E extends Enum&lt;E&gt;&gt; long generateBits(final Class&lt;E&gt; enumClass, final E... values)</li></ul> <p><em><strong>例子：</strong></em></p> <div class=\\\"language-java line-numbers-mode\\\"><pre class=\\\"language-java\\\"><code>EnumUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">generateBits</span><span class=\\\"token punctuation\\\">(</span>Options<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">class</span><span class=\\\"token punctuation\\\">,</span> ListUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">newArrayList</span><span class=\\\"token punctuation\\\">(</span>Options<span class=\\\"token punctuation\\\">.</span>A<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//1l</span>\\nEnumUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">generateBits</span><span class=\\\"token punctuation\\\">(</span>Options<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">class</span><span class=\\\"token punctuation\\\">,</span> ListUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">newArrayList</span><span class=\\\"token punctuation\\\">(</span>Options<span class=\\\"token punctuation\\\">.</span>A<span class=\\\"token punctuation\\\">,</span> Options<span class=\\\"token punctuation\\\">.</span>B<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//3l</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br></div></div><hr> <p><em>long重新解析为若干个枚举值，用于使用long保存多个选项的情况.</em></p> <ul><li>&lt;E extends Enum&lt;E&gt;&gt; EnumSet&lt;E&gt; processBits(final Class&lt;E&gt; enumClass, final long value)</li></ul> <p><em><strong>例子：</strong></em></p> <div class=\\\"language-java line-numbers-mode\\\"><pre class=\\\"language-java\\\"><code>EnumUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">processBits</span><span class=\\\"token punctuation\\\">(</span>Options<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">class</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//Options.A, Options.B</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br></div></div><hr> <h2 id=\\\"objectutil\\\"><a href=\\\"#objectutil\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> ObjectUtil</h2> <h2 id=\\\"platforms\\\"><a href=\\\"#platforms\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Platforms</h2> <h2 id=\\\"propertiesutil\\\"><a href=\\\"#propertiesutil\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> PropertiesUtil</h2> <h2 id=\\\"runtimeutil\\\"><a href=\\\"#runtimeutil\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> RuntimeUtil</h2> <h2 id=\\\"systempropertiesutil\\\"><a href=\\\"#systempropertiesutil\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> SystemPropertiesUtil</h2>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}