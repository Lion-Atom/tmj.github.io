{"remainingRequest":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\docs\\document\\AlwaysNew2.0最佳实践手册.md?vue&type=template&id=3b220ba1&","dependencies":[{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\docs\\document\\AlwaysNew2.0最佳实践手册.md","mtime":1539739613977},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1539225403889},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1539225403889},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h2\", { attrs: { id: \"_1-ghost安装\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_1-ghost安装\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 1.GHOST安装\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [_vm._v(\"场景：\")]),\n        _vm._v(\n          \"\\n医院新采购一批电脑，那么这些电脑需要装上许多定制的软件（比如CIS，HIS），单独去给每台电脑安装时很麻烦的，就会想到何不在给电脑装系统时就给安装上，而且给电脑装系统这事可以让电脑卖家来做，我们需要做的就是制作一个电脑系统的ghost。我们需要关注的就是怎么去制作ghost。\\n\"\n        ),\n        _c(\"strong\", [_vm._v(\"解决方案：\")]),\n        _vm._v(\n          \"\\nAlwaysNew v2.0 时可以支持Ghost安装方式的，在一台电脑上安装好AlwaysNew助手 ，然后关闭AlwaysNew助手 ，找到AlwaysNew助手 的安装目录，删掉Config文件夹里的CLIENTID文件，然后使用ghost制作工具制作ghost。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"_2-分院升级\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_2-分院升级\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 2.分院升级\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [_vm._v(\"场景：\")]),\n        _vm._v(\n          \"\\n有的医院有多个分院，每个分院的同一业务系统可能会有不同的配置文件，即业务系统的程序文件是不一样的，需要分开升级。\\n\"\n        ),\n        _c(\"strong\", [_vm._v(\"解决方案：\")]),\n        _vm._v(\n          \"\\n同一业务系统不同分院使用不同的业务系统ID，即在初始化业务系统时为分院的业务系统单独创建一个业务系统，比如CIS系统，可以创建CIS_zongyuan，CIS_fenyuan1，CIS_fenyuan2，三个不同的业务系统，升级时可以单独发布升级。还可以使用标签来区分不同分院，但是这种方法在发布升级计划时实施人员容易忘记选择标签从而发布错，故推荐使用业务系统来解决分院的问题。\"\n        )\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}