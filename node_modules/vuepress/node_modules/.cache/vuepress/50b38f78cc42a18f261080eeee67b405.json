{"remainingRequest":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\docs\\backend\\java\\utils\\base.md?vue&type=template&id=2b374242&","dependencies":[{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\docs\\backend\\java\\utils\\base.md","mtime":1539244217877},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1539225403889},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1539225403889},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["\n<div class=\"content\"><p>'## BooleanUtil</p>\n<blockquote>\n<p>布尔工具类（BooleanUtil）</p>\n</blockquote>\n<h3 id=\"主要功能：\"><a class=\"header-anchor\" href=\"#主要功能：\" aria-hidden=\"true\">#</a> 主要功能：</h3>\n<ul>\n<li>从String(true/false, yes/no)，转换为Boolean或boolean</li>\n<li>逻辑运算：取反，多个boolean的and,or计算</li>\n</ul>\n<h3 id=\"api介绍：\"><a class=\"header-anchor\" href=\"#api介绍：\" aria-hidden=\"true\">#</a> API介绍：</h3>\n<p><em>使用标准JDK，只分析是否忽略大小写的&quot;true&quot;, str为空时返回false</em></p>\n<ul>\n<li>boolean toBoolean(String str)</li>\n</ul>\n<p><em><strong>例子：</strong></em></p>\n<!--beforebegin--><div class=\"language-java line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-java\"><code>BooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">toBoolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"True\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">toBoolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"trUe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">toBoolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yes\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//false</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><hr>\n<p><em>使用标准JDK，只分析是否忽略大小写的&quot;true&quot;, str为空时返回null</em></p>\n<ul>\n<li>Boolean toBooleanObject(String str)</li>\n</ul>\n<p><em><strong>例子：</strong></em></p>\n<!--beforebegin--><div class=\"language-java line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-java\"><code>BooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">toBooleanObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"True\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Boolean.TRUE</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">toBooleanObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"trUe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Boolean.TRUE</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">toBooleanObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yes\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//Boolean.FALSE</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><hr>\n<p><em>使用标准JDK，只分析是否忽略大小写的&quot;true&quot;, str为空时返回defaultValue</em></p>\n<ul>\n<li>Boolean toBooleanObject(String str, Boolean defaultValue)</li>\n</ul>\n<p><em><strong>例子：</strong></em></p>\n<!--beforebegin--><div class=\"language-java line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-java\"><code>BooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">toBooleanObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"True\"</span><span class=\"token punctuation\">,</span> Boolean<span class=\"token punctuation\">.</span>FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Boolean.TRUE</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">toBooleanObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"trUe\"</span><span class=\"token punctuation\">,</span> Boolean<span class=\"token punctuation\">.</span>FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Boolean.TRUE</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">toBooleanObject</span><span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">,</span> Boolean<span class=\"token punctuation\">.</span>TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//Boolean.TRUE</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">toBooleanObject</span><span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">,</span> Boolean<span class=\"token punctuation\">.</span>FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//Boolean.FALSE</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div><!--beforeend--></div><!--afterend--><hr>\n<p><em>支持true/false, on/off, y/n, yes/no的转换, str为空或无法分析时返回null</em></p>\n<ul>\n<li>Boolean parseGeneralString(String str)</li>\n</ul>\n<p><em><strong>例子：</strong></em></p>\n<!--beforebegin--><div class=\"language-java line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-java\"><code>BooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//null</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Boolean.TRUE</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"T\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//Boolean.TRUE</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"false\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Boolean.FALSE</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"f\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//Boolean.FALSE </span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//Boolean.FALSE</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//Boolean.FALSE </span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"on\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//Boolean.TRUE</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ON\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//Boolean.TRUE</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"off\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//Boolean.FALSE</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"oFf\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//Boolean.FALSE</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yes\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//Boolean.TRUE</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Y\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//Boolean.TRUE </span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//null</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"true \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//null // trailing space (too long)</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ono\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//null // does not match on or no</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br></div><!--beforeend--></div><!--afterend--><hr>\n<p><em>支持true/false,on/off, y/n, yes/no的转换, str为空或无法分析时返回defaultValue</em></p>\n<ul>\n<li>Boolean parseGeneralString(String str, Boolean defaultValue)</li>\n</ul>\n<p><em><strong>例子：</strong></em></p>\n<!--beforebegin--><div class=\"language-java line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-java\"><code>BooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span>Boolean<span class=\"token punctuation\">.</span>TRUE<span class=\"token punctuation\">,</span> Boolean<span class=\"token punctuation\">.</span>FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span>Boolean<span class=\"token punctuation\">.</span>FALSE<span class=\"token punctuation\">,</span> Boolean<span class=\"token punctuation\">.</span>TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//false</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">parseGeneralString</span><span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">,</span> Boolean<span class=\"token punctuation\">.</span>TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">//true</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><hr>\n<p><em>取反</em></p>\n<ul>\n<li>boolean negate(final boolean bool)</li>\n</ul>\n<p><em><strong>例子：</strong></em></p>\n<!--beforebegin--><div class=\"language-java line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-java\"><code>BooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">negate</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//false;</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">negate</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true;</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--><hr>\n<p><em>取反</em></p>\n<ul>\n<li>Boolean negate(final Boolean bool)</li>\n</ul>\n<p><em><strong>例子：</strong></em></p>\n<!--beforebegin--><div class=\"language-java line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-java\"><code>BooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">negate</span><span class=\"token punctuation\">(</span>Boolean<span class=\"token punctuation\">.</span>TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//Boolean.FALSE;</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">negate</span><span class=\"token punctuation\">(</span>Boolean<span class=\"token punctuation\">.</span>FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Boolean.TRUE;</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">negate</span><span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">//null;</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><hr>\n<p><em>多个值的and</em></p>\n<ul>\n<li>boolean and(final boolean... array)</li>\n</ul>\n<p><em><strong>例子：</strong></em></p>\n<!--beforebegin--><div class=\"language-java line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-java\"><code>BooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">//true</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">//false</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">//false</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//false</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//true</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div><!--beforeend--></div><!--afterend--><hr>\n<p><em>多个值的or</em></p>\n<ul>\n<li>boolean or(final boolean... array)</li>\n</ul>\n<p><em><strong>例子：</strong></em></p>\n<!--beforebegin--><div class=\"language-java line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-java\"><code>BooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">//true</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">//false</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">//true</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//true</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//true</span>\nBooleanUtil<span class=\"token punctuation\">.</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//false</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div><!--beforeend--></div><!--afterend--><hr>\n<h2 id=\"enumutil\"><a class=\"header-anchor\" href=\"#enumutil\" aria-hidden=\"true\">#</a> EnumUtil</h2>\n<blockquote>\n<p>枚举工具类（EnumUtil）</p>\n</blockquote>\n<h3 id=\"主要功能：-2\"><a class=\"header-anchor\" href=\"#主要功能：-2\" aria-hidden=\"true\">#</a> 主要功能：</h3>\n<ul>\n<li>将多个枚举值按bit保存到long中</li>\n</ul>\n<h3 id=\"api介绍：-2\"><a class=\"header-anchor\" href=\"#api介绍：-2\" aria-hidden=\"true\">#</a> API介绍：</h3>\n<p><em>将若干个枚举值转换为long(按bits 1,2,4,8...的方式叠加)，用于使用long保存多个选项的情况.</em></p>\n<ul>\n<li>&lt;E extends Enum&lt;E&gt;&gt; long generateBits(final Class&lt;E&gt; enumClass, final Iterable&lt;? extends E&gt; values)</li>\n</ul>\n<p><em><strong>例子：</strong></em></p>\n<!--beforebegin--><div class=\"language-java line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> Options <span class=\"token punctuation\">{</span>\n\t\tA<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> C<span class=\"token punctuation\">,</span> D\n\t<span class=\"token punctuation\">}</span>\n\nEnumUtil<span class=\"token punctuation\">.</span><span class=\"token function\">generateBits</span><span class=\"token punctuation\">(</span>Options<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> Options<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//1l</span>\nEnumUtil<span class=\"token punctuation\">.</span><span class=\"token function\">generateBits</span><span class=\"token punctuation\">(</span>Options<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> Options<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">,</span> Options<span class=\"token punctuation\">.</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//3l</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div><!--beforeend--></div><!--afterend--><hr>\n<p><em>将若干个枚举值转换为long(按bits 1,2,4,8...的方式叠加)，用于使用long保存多个选项的情况.</em></p>\n<ul>\n<li>&lt;E extends Enum&lt;E&gt;&gt; long generateBits(final Class&lt;E&gt; enumClass, final E... values)</li>\n</ul>\n<p><em><strong>例子：</strong></em></p>\n<!--beforebegin--><div class=\"language-java line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-java\"><code>EnumUtil<span class=\"token punctuation\">.</span><span class=\"token function\">generateBits</span><span class=\"token punctuation\">(</span>Options<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> ListUtil<span class=\"token punctuation\">.</span><span class=\"token function\">newArrayList</span><span class=\"token punctuation\">(</span>Options<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//1l</span>\nEnumUtil<span class=\"token punctuation\">.</span><span class=\"token function\">generateBits</span><span class=\"token punctuation\">(</span>Options<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> ListUtil<span class=\"token punctuation\">.</span><span class=\"token function\">newArrayList</span><span class=\"token punctuation\">(</span>Options<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">,</span> Options<span class=\"token punctuation\">.</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//3l</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--><hr>\n<p><em>long重新解析为若干个枚举值，用于使用long保存多个选项的情况.</em></p>\n<ul>\n<li>&lt;E extends Enum&lt;E&gt;&gt; EnumSet&lt;E&gt; processBits(final Class&lt;E&gt; enumClass, final long value)</li>\n</ul>\n<p><em><strong>例子：</strong></em></p>\n<!--beforebegin--><div class=\"language-java line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-java\"><code>EnumUtil<span class=\"token punctuation\">.</span><span class=\"token function\">processBits</span><span class=\"token punctuation\">(</span>Options<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Options.A, Options.B</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><hr>\n<h2 id=\"objectutil\"><a class=\"header-anchor\" href=\"#objectutil\" aria-hidden=\"true\">#</a> ObjectUtil</h2>\n<h2 id=\"platforms\"><a class=\"header-anchor\" href=\"#platforms\" aria-hidden=\"true\">#</a> Platforms</h2>\n<h2 id=\"propertiesutil\"><a class=\"header-anchor\" href=\"#propertiesutil\" aria-hidden=\"true\">#</a> PropertiesUtil</h2>\n<h2 id=\"runtimeutil\"><a class=\"header-anchor\" href=\"#runtimeutil\" aria-hidden=\"true\">#</a> RuntimeUtil</h2>\n<h2 id=\"systempropertiesutil\"><a class=\"header-anchor\" href=\"#systempropertiesutil\" aria-hidden=\"true\">#</a> SystemPropertiesUtil</h2>\n</div>\n",null]}