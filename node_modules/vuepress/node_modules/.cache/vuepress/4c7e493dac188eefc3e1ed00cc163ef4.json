{"remainingRequest":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\docs\\frontend\\html5.md?vue&type=template&id=3c89b2be&","dependencies":[{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\docs\\frontend\\html5.md","mtime":1539668432473},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1539225403889},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1539225403889},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._m(0),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('p',[_vm._v(\"将一个整数中的数字进行颠倒，当颠倒后的整数溢出时，返回 0 (标记为 32 位整数)。\")]),_vm._v(\" \"),_vm._m(2),_vm._v(\" \"),_c('p',[_vm._v(\"给定 x = 123，返回 321\")]),_vm._v(\" \"),_c('p',[_vm._v(\"给定 x = -123，返回 -321\")]),_vm._v(\" \"),_c('p',[_vm._v(\"给定 x = 1534236469， 返回 0\")]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_vm._m(3),_vm._v(\" \"),_vm._m(4),_vm._v(\" \"),_vm._m(5),_vm._v(\" \"),_c('p',[_vm._v(\"给\")]),_vm._v(\" \"),_c('p',[_vm._v(\"你\")]),_vm._v(\" \"),_c('p',[_vm._v(\"点\")]),_vm._v(\" \"),_c('p',[_vm._v(\"时\")]),_vm._v(\" \"),_c('p',[_vm._v(\"间\")]),_vm._v(\" \"),_c('p',[_vm._v(\"想\")]),_vm._v(\" \"),_c('p',[_vm._v(\"一\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下\")]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_vm._m(6),_vm._v(\" \"),_vm._m(7),_vm._v(\" \"),_vm._m(8),_vm._v(\" \"),_vm._m(9),_vm._v(\" \"),_c('p',[_vm._v(\"这部分跟位操作符，二进制有关，有兴趣可以去搜下。\")]),_vm._v(\" \"),_vm._m(10),_vm._v(\" \"),_vm._m(11),_vm._v(\" \"),_vm._m(12),_vm._v(\" \"),_vm._m(13),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"github-算法仓库地址\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#github-算法仓库地址\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"https://github.com/OBKoro1/Brush_algorithm\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"github 算法仓库地址\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('p',[_vm._v(\"2018.8.23\")])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"难度：简单\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#难度：简单\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 难度：简单\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"描述\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#描述\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 描述\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"样例：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#样例：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 样例：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"这题很简单-自己想一下！\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#这题很简单-自己想一下！\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 这题很简单,自己想一下！\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"这题很简单-自己想一下！-2\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#这题很简单-自己想一下！-2\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 这题很简单,自己想一下！\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"这题很简单-自己想一下！-3\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#这题很简单-自己想一下！-3\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 这题很简单,自己想一下！\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"解法：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#解法：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 解法：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"最优：转字符串 再转数组进行操作\")]),_vm._v(\" \"),_c('li',[_vm._v(\"看到有人用四则运算+遍历反转整数，会把这个解法放到下面\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"提示\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#提示\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 提示:\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"整数溢出的值为\"),_c('code',[_vm._v(\"Math.pow(2, 31) - 1\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"Math.pow(-2, 31) + 1\")]),_vm._v(\"，转为数字：\"),_c('code',[_vm._v(\"2147483647\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"-2147483647\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"code\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#code\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" code:\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_c('p',[_vm._v(\"转数组操作：\")]),_vm._v(\" \"),_c('pre',[_c('code',[_vm._v(\"const reverseInteger = (n) => {\\n    if (n < 0) {\\n        n = n.toString().split('-')[1]; // 负数提取数字\\n        n = '-' + [...n].reverse().join('');\\n        n = +n; // 转数字\\n    } else {\\n        n = n.toString(); // 转字符\\n        n = +[...n].reverse().join(''); // 转为数组 颠倒数组 再合字符 最后转数字\\n    }\\n    if (n >= Math.pow(2, 31) - 1 || n <= Math.pow(-2, 31) + 1) { // 判断溢出\\n        return 0;\\n    }\\n    return n;\\n}\\n\")])])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"遍历，一位一位颠倒：\")]),_vm._v(\" \"),_c('pre',[_c('code',[_vm._v(\"const reverseInteger = function (n) {\\n    if (n === 0) return 0;\\n    let res = 0\\n    while (n !== 0) {\\n        // 从个位起一位一位的颠倒\\n        res = res * 10 + n % 10;\\n        n = parseInt(n / 10);  // n除以10， 一位数转化完成 到最后小于1 被转成0 退出循环\\n    }\\n    if (res >= 2147483647 || res <= -2147483647) {\\n        return 0;\\n    }\\n    return res;\\n}\\n\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"转数组操作运行效率也更高点：\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#转数组操作运行效率也更高点：\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 转数组操作运行效率也更高点：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"http://ww1.sinaimg.cn/large/005Y4rCogy1fujnet3b8vj318z0kh41p.jpg\",\"alt\":\"\"}})])}]\n\nexport { render, staticRenderFns }"]}