{"remainingRequest":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!E:\\vue项目集合\\winning-pts-doc-share-vuepress\\docs\\frontend\\vuepress爬坑篇之搭建个人博客.md?vue&type=template&id=1dcde93b&","dependencies":[{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\docs\\frontend\\vuepress爬坑篇之搭建个人博客.md","mtime":1539828057261},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1539225403889},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1539225403889},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue项目集合\\winning-pts-doc-share-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"前言\"><a class=\"header-anchor\" href=\"#前言\" aria-hidden=\"true\">#</a> 前言</h1>\n<p>vuepress是尤大大4月12日发布的一个全新的<a href=\"https://vuepress.vuejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">基于vue的静态网站生成器<OutboundLink/></a>，实际上就是一个vue的<a href=\"https://www.jianshu.com/p/fad8aa9e277f\" target=\"_blank\" rel=\"noopener noreferrer\">spa<OutboundLink/></a>应用，内置webpack，可以用来写文档。\n本文主要是分享本人在使用vuepress搭建<a href=\"http://172.16.140.35:81/\" target=\"_blank\" rel=\"noopener noreferrer\">个人博客<OutboundLink/></a>遇到的一些坑和比较实用的小技巧。\n<img src=\"https://files.jb51.net/file_images/article/201804/2018426112733150.png\" alt=\"官方图\">\n<!--more--></p>\n<h1 id=\"内容\"><a class=\"header-anchor\" href=\"#内容\" aria-hidden=\"true\">#</a> 内容</h1>\n<h2 id=\"开撸框架\"><a class=\"header-anchor\" href=\"#开撸框架\" aria-hidden=\"true\">#</a> 开撸框架</h2>\n<p>你可以跟着文档上的例子自己玩一玩，不过由于VuePress的文档也是用VuePress来实现的，可以取巧直接拿VuePress仓库中的docs目录拿来玩耍。\n但是官网上的例子对于初学者来说，不适合作为第一个demo撸撸。下面我以webstrom工具为例新建一个空项目。可以从下图看出来啥都不用刻意布局：\n<img src=\"/vuepress-new-demo.png\" alt=\"新建空项目\"></p>\n<h3 id=\"_1-首先安装vuepress\"><a class=\"header-anchor\" href=\"#_1-首先安装vuepress\" aria-hidden=\"true\">#</a> 1.首先安装VuePress</h3>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>yarn add -D vuepress 或者 npm install -g vuepress  //全局安装\nyarn global add vuepress 或者 npm install -D vuepress  //本地安装\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"_2-新建docs目录\"><a class=\"header-anchor\" href=\"#_2-新建docs目录\" aria-hidden=\"true\">#</a> 2.新建docs目录</h3>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>mkdir docs\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"_3-新建一个-markdown-文件\"><a class=\"header-anchor\" href=\"#_3-新建一个-markdown-文件\" aria-hidden=\"true\">#</a> 3.新建一个 markdown 文件</h3>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code># 新建一个 markdown 文件\necho &#39;# Hello VuePress!&#39; &gt; docs/README.md\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"_4-添加package-json-脚本\"><a class=\"header-anchor\" href=\"#_4-添加package-json-脚本\" aria-hidden=\"true\">#</a> 4.添加package.json 脚本</h3>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>{\n  &quot;devDependencies&quot;: {\n    &quot;vuepress&quot;: &quot;^1.0.0-alpha.8&quot;\n  },                              //vuepress版本，此段可自行添加\n  &quot;scripts&quot;: {\n    &quot;docs:dev&quot;: &quot;vuepress dev docs&quot;,\n    &quot;docs:build&quot;: &quot;vuepress build docs&quot;\n  }\n}\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"_5-开始写作或预览\"><a class=\"header-anchor\" href=\"#_5-开始写作或预览\" aria-hidden=\"true\">#</a> 5.开始写作或预览</h3>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>yarn docs:dev # 或者：npm run docs:dev\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>我们可以从下图中可以看到我们的目录结构和预览/写作的入口，打开http://localhost:8080/可以预览：\n<img src=\"/vuepress-demo-codes.png\" alt=\"demo-codes\"></p>\n<h3 id=\"_6-运行结果预览\"><a class=\"header-anchor\" href=\"#_6-运行结果预览\" aria-hidden=\"true\">#</a> 6.运行结果预览</h3>\n<p><img src=\"/demo-dev-result.png\" alt=\"运行结果预览\"></p>\n<h2 id=\"正式构建\"><a class=\"header-anchor\" href=\"#正式构建\" aria-hidden=\"true\">#</a> 正式构建</h2>\n<p>基于上面，我们已经为个人博客这个目标搭好了我们的“地基”，下面正式填充内容。在正式开始“添砖加瓦”之前，我们先为我们的项目打包，\nbuild生成静态的HTML文件,默认会在 .vuepress/dist 文件夹下；之所以要在建造之前打包就是因为我们后面配置文件config.js、放置静态文件public目录等都是在**[.vuepress]**文件目录下的。</p>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>yarn docs:build # 或者：npm run docs:build\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"首页\"><a class=\"header-anchor\" href=\"#首页\" aria-hidden=\"true\">#</a> 首页</h3>\n<p>首页作为门面，我们必然要规范一下，炫酷一下，同样采用官方那个样式，看起来也不是不错的哦；根据个人喜好可以试试看，在根目录下的README.md中修改内容为：</p>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>---\nhome: true   //这句意在指定首页是此页\nheroImage: /logo.jpg\nactionText: Demo →\nactionLink: /\nfeatures:\n- title: 简洁至上\n  details: 以 Markdown 为中心的项目结构，以最少的配置帮助你专注于写作。\n- title: Vue驱动\n  details: 享受 Vue + webpack 的开发体验，在 Markdown 中使用 Vue 组件，同时可以使用 Vue 来开发自定义主题。\n- title: 高性能\n  details: VuePress 为每个页面预渲染生成静态的 HTML，同时在页面被加载的时候，将作为 SPA 运行。\nfooter: MIT Licensed | Copyright © 2018-present Evan You\n---\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"基本配置\"><a class=\"header-anchor\" href=\"#基本配置\" aria-hidden=\"true\">#</a> 基本配置</h3>\n<p>在 .vuepress目录下新建一个config.js,他导出一个对象</p>\n<p>一些配置可以参考<a href=\"https://vuepress.vuejs.org/config/#base\" target=\"_blank\" rel=\"noopener noreferrer\">官方文档<OutboundLink/></a>,这里我配置常用及必须配置:\n网站信息、导航栏设置、端口号自定义、侧边栏设置、默认全局搜索。</p>\n<h4 id=\"网站信息\"><a class=\"header-anchor\" href=\"#网站信息\" aria-hidden=\"true\">#</a> 网站信息</h4>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>module.exports = {\n  title: &#39;游魂的文档&#39;,\n  description: &#39;Document library&#39;,\n  head: [\n    [&#39;link&#39;, { rel: &#39;icon&#39;, href: `/favicon.ico` }], //需要开启\n  ],\n   base: &#39;/&#39;, // 这是部署到github相关的配置 下面会讲\n   markdown: {\n       lineNumbers: true // 代码块显示行号\n   },\n}\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br></div><!--beforeend--></div><!--afterend--><h4 id=\"导航栏配置\"><a class=\"header-anchor\" href=\"#导航栏配置\" aria-hidden=\"true\">#</a> 导航栏配置</h4>\n<p>导航栏可能包含你的页面标题、搜索框、 导航栏链接、多语言切换、仓库链接，它们均取决于你的配置；导航栏中的/相对目录都是以docs为根目录的，创建目录时候一定不要搞错了，如下面的frontend目录层级适合.vuepress同级。</p>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>module.exports = {\n  themeConfig: {\n    nav: [\n      { text: &#39;主页&#39;, link: &#39;/&#39; },\n      { text: &#39;前端规范&#39;, link: &#39;/frontEnd/&#39; },\n      { text: &#39;开发环境&#39;, link: &#39;/development/&#39; },\n      { text: &#39;学习文档&#39;, link: &#39;/notes/&#39; },\n      { text: &#39;个人博客&#39;, link: &#39;http://172.16.140.35/&#39; },\n      // 下拉列表的配置\n      {\n        text: &#39;Languages&#39;,\n        items: [\n          { text: &#39;Chinese&#39;, link: &#39;/language/chinese&#39; },\n          { text: &#39;English&#39;, link: &#39;/language/English&#39; }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br></div><!--beforeend--></div><!--afterend--><p>如图：\n<img src=\"blog-demo-p1.png\" alt=\"\"></p>\n<h4 id=\"端口自定义\"><a class=\"header-anchor\" href=\"#端口自定义\" aria-hidden=\"true\">#</a> 端口自定义</h4>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>port:8383  //避免默认的8080端口占用冲突\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><h4 id=\"侧边栏配置\"><a class=\"header-anchor\" href=\"#侧边栏配置\" aria-hidden=\"true\">#</a> 侧边栏配置</h4>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code> sidebar: [\n            {\n                title: &#39;前端共享&#39;,\n                // collapsable: false,\n                children: [\n                    [&#39;/frontend/introduction&#39;, &#39;前端介绍&#39;],\n                    [&#39;/frontend/vuepress爬坑篇之搭建个人博客&#39;, &#39;vuepress爬坑篇之搭建个人博客&#39;],\n                    [&#39;/frontend/html5&#39;, &#39;HTML5&#39;],\n                    [&#39;/frontend/css&#39;, &#39;CSS&#39;],\n                ]\n            },\n            {\n                title: &#39;开发环境&#39;,\n                children: [\n                    [&#39;/development/jdk安装&#39;, &#39;jdk安装&#39;],\n                    [&#39;/development/idea安装&#39;, &#39;idea安装&#39;],\n                    [&#39;/development/maven安装&#39;, &#39;maven安装&#39;],\n                    [&#39;/development/webstrom安装&#39;, &#39;webstrom安装&#39;],\n                    [&#39;/development/alwaysnew助手安装&#39;, &#39;alwaysnew助手安装&#39;],\n                ]\n            },\n            {\n                title: &#39;共享文档&#39;,\n                children: [\n                    [&#39;/document/AlwaysNew场景案例分析&#39;, &#39;AlwaysNew场景案例分析&#39;],\n                    [&#39;/document/AlwaysNew实施路径说明文档&#39;, &#39;AlwaysNew实施路径说明文档&#39;],\n                    [&#39;/document/AlwaysNew工具故障原因汇总及使用原则&#39;, &#39;AlwaysNew工具故障原因汇总及使用原则&#39;],\n                    [&#39;/document/AlwaysNew最佳实践手册&#39;, &#39;AlwaysNew2.0最佳实践手册&#39;]\n                ]\n            },\n        ]\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br><span class=\"line-number\">26</span><br><span class=\"line-number\">27</span><br><span class=\"line-number\">28</span><br><span class=\"line-number\">29</span><br><span class=\"line-number\">30</span><br><span class=\"line-number\">31</span><br></div><!--beforeend--></div><!--afterend--><p>如图：\n<img src=\"/vuepress-side-bar.png\" alt=\"\">\n至此，大致的一个个人博客就创建好了，页面的具体填充就不再赘述了。</p>\n<h3 id=\"其他\"><a class=\"header-anchor\" href=\"#其他\" aria-hidden=\"true\">#</a> 其他</h3>\n<h4 id=\"图片添加\"><a class=\"header-anchor\" href=\"#图片添加\" aria-hidden=\"true\">#</a> 图片添加</h4>\n<p>图片统一放在docs/.vuepress/public文件夹下面，如上面首页中***heroImage: /logo.jpg***logo.jpg图片放在public下：</p>\n<h4 id=\"内置搜索\"><a class=\"header-anchor\" href=\"#内置搜索\" aria-hidden=\"true\">#</a> 内置搜索</h4>\n<p>你可以通过设置 themeConfig.search: false 来禁用默认的搜索框，或是通过 themeConfig.searchMaxSuggestions 来调整默认搜索框显示的搜索结果数量：</p>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>module.exports = {\n  themeConfig: {\n    search: true, //false是关闭\n    searchMaxSuggestions: 10 //搜索结果条目最大为10\n  }\n}\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div><!--beforeend--></div><!--afterend--><p>你可以通过 themeConfig.algolia 选项来用 []Algolia](https://community.algolia.com/docsearch/) 搜索 替换内置的搜索框。要启用 Algolia 搜索，需要注册购买域名等，具体事宜\n请参考<a href=\"https://github.com/algolia/docsearch#docsearch-options\" target=\"_blank\" rel=\"noopener noreferrer\">Algolia DocSearch 的文档<OutboundLink/></a></p>\n<h4 id=\"侧边栏分组\"><a class=\"header-anchor\" href=\"#侧边栏分组\" aria-hidden=\"true\">#</a> 侧边栏分组</h4>\n<p>默认侧边栏是所有板块公用的，但如果你想为不同的页面组来显示不同的侧边栏，首先，将你的页面文件组织成下述的目录结构：</p>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>.\n├─ README.md\n├─ contact.md\n├─ about.md\n├─ foo/\n│  ├─ README.md\n│  ├─ one.md\n│  └─ two.md\n└─ bar/\n   ├─ README.md\n   ├─ three.md\n   └─ four.md\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br></div><!--beforeend--></div><!--afterend--><p>接着，遵循以下的侧边栏配置：</p>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>// .vuepress/config.js\nmodule.exports = {\n  themeConfig: {\n    sidebar: {\n      &#39;/foo/&#39;: [\n        &#39;&#39;,     /* /foo/ */\n        &#39;one&#39;,  /* /foo/one.html */\n        &#39;two&#39;   /* /foo/two.html */\n      ],\n\n      &#39;/bar/&#39;: [\n        &#39;&#39;,      /* /bar/ */\n        &#39;three&#39;, /* /bar/three.html */\n        &#39;four&#39;   /* /bar/four.html */\n      ],\n\n      // fallback\n      &#39;/&#39;: [\n        &#39;&#39;,        /* / */\n        &#39;contact&#39;, /* /contact.html */\n        &#39;about&#39;    /* /about.html */\n      ]\n    }\n  }\n}\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br></div><!--beforeend--></div><!--afterend--><p><em><strong>注意</strong></em>：确保 fallback 侧边栏被最后定义。VuePress 会按顺序遍历侧边栏配置来寻找匹配的配置。</p>\n<h4 id=\"自动生成侧栏\"><a class=\"header-anchor\" href=\"#自动生成侧栏\" aria-hidden=\"true\">#</a> 自动生成侧栏</h4>\n<p>如果你希望自动生成一个仅仅包含了当前页面标题（headers）链接的侧边栏，你可以通过 YAML front matter 来实现：</p>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>sidebar: auto\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>也可以在config.js中themeConfig同样使用<em>sidebar:auto</em>里面全局定义它。</p>\n<h4 id=\"git部署\"><a class=\"header-anchor\" href=\"#git部署\" aria-hidden=\"true\">#</a> git部署</h4>\n<p>默认已经本地已建git仓库，没有的话可参考Git的安装及使用进行详细说明的<a href=\"https://git-scm.com/downloads/\" target=\"_blank\" rel=\"noopener noreferrer\">文档<OutboundLink/></a>。</p>\n<h4 id=\"第一步：创建本地仓库用于push到远处仓库\"><a class=\"header-anchor\" href=\"#第一步：创建本地仓库用于push到远处仓库\" aria-hidden=\"true\">#</a> 第一步：创建本地仓库用于push到远处仓库</h4>\n<p>终端进入项目所在目录，输入：</p>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>git init\ngit add -A\ngit commit -m &#39;deploy&#39;\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><h4 id=\"第二步：为当前用户（我的是root用户）创建ssh连接公钥，并将公钥添加在添加在个人的git-osc账号下，用于向远程服务器push时的验证\"><a class=\"header-anchor\" href=\"#第二步：为当前用户（我的是root用户）创建ssh连接公钥，并将公钥添加在添加在个人的git-osc账号下，用于向远程服务器push时的验证\" aria-hidden=\"true\">#</a> 第二步：为当前用户（我的是root用户）创建ssh连接公钥，并将公钥添加在添加在个人的Git@OSC账号下，用于向远程服务器push时的验证</h4>\n<p>参见其它文章，不再详述。</p>\n<h4 id=\"第三步：为studygit项目添加远程仓库，并将本地仓库中代码push到远程仓库：\"><a class=\"header-anchor\" href=\"#第三步：为studygit项目添加远程仓库，并将本地仓库中代码push到远程仓库：\" aria-hidden=\"true\">#</a> 第三步：为StudyGit项目添加远程仓库，并将本地仓库中代码push到远程仓库：</h4>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>git remote add origin 你的远程库地址 //origin是仓库别称可自行定义；\n如：git remote add origin https://github.com/Lion-Atom/tmj.github.io\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--><p>如果提示SSL未开启错误，我们可以借助下面两行代码避开：</p>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>git config --global http.proxy\ngit config --global --unset http.proxy\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--><p>然后你就可以push了！</p>\n<h4 id=\"第四步（可选）：git-仓库和编辑链接\"><a class=\"header-anchor\" href=\"#第四步（可选）：git-仓库和编辑链接\" aria-hidden=\"true\">#</a> 第四步（可选）：Git 仓库和编辑链接</h4>\n<p>当你提供了 themeConfig.repo 选项，将会自动在每个页面的导航栏生成生成一个 GitHub 链接，以及在页面的底部生成一个 &quot;Edit this page&quot; 链接。</p>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>// .vuepress/config.js\nmodule.exports = {\n  themeConfig: {\n    // 假定是 GitHub. 同时也可以是一个完整的 GitLab URL\n    repo: &#39;vuejs/vuepress&#39;,\n    // 自定义仓库链接文字。默认从 `themeConfig.repo` 中自动推断为\n    // &quot;GitHub&quot;/&quot;GitLab&quot;/&quot;Bitbucket&quot; 其中之一，或是 &quot;Source&quot;。\n    repoLabel: &#39;查看源码&#39;,\n\n    // 以下为可选的编辑链接选项\n\n    // 假如你的文档仓库和项目本身不在一个仓库：\n    docsRepo: &#39;vuejs/vuepress&#39;,\n    // 假如文档不是放在仓库的根目录下：\n    docsDir: &#39;docs&#39;,\n    // 假如文档放在一个特定的分支下：\n    docsBranch: &#39;master&#39;,\n    // 默认是 false, 设置为 true 来启用\n    editLinks: true,\n    // 默认为 &quot;Edit this page&quot;\n    editLinkText: &#39;帮助我们改善此页面！&#39;\n  }\n}\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br></div><!--beforeend--></div><!--afterend--><p>可以参考作者的自定义配置：</p>\n<!--beforebegin--><div class=\"language-bush line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code> repo: &#39;Lion-Atom/tmj.github.io&#39;\n repoLabel: &#39;查看源码&#39;,\n docsRepo: &#39;Lion-Atom/tmj.github.io&#39;,//远程仓库地址\n docsDir: &#39;docs&#39;,\n docsBranch: &#39;master&#39;, //远程git所属分支名称\n // 默认是 false, 设置为 true 来启用\n editLinks: true,\n editLinkText: &#39;帮助我们改善此页面！&#39;,\n serviceWorker: {\n     updatePopup: true\n },\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"注意事项-坑\"><a class=\"header-anchor\" href=\"#注意事项-坑\" aria-hidden=\"true\">#</a> 注意事项(坑)</h3>\n<ul>\n<li>把你想引用的资源都放在.vuepress目录下的public文件夹</li>\n<li>给git仓库绑定了独立域名后,记得修改base路径</li>\n<li>设置侧边栏分组后默认会自动生成 上/下一篇链接</li>\n<li>设置了自动生成侧边栏会把侧边栏分组覆盖掉</li>\n<li>设置PWA记得开启SSL</li>\n</ul>\n<h2 id=\"附录\"><a class=\"header-anchor\" href=\"#附录\" aria-hidden=\"true\">#</a> 附录</h2>\n<p>Git命令速查表：\n<img src=\"/git%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8.png\" alt=\"Git命令速查表\"></p>\n</div>\n",null]}