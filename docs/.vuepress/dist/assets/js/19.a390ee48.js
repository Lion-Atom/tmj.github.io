(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{161:function(t,e,r){"use strict";r.r(e);var n=r(0),s=Object(n.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),r("p",[t._v("将一个整数中的数字进行颠倒，当颠倒后的整数溢出时，返回 0 (标记为 32 位整数)。")]),t._v(" "),t._m(2),t._v(" "),r("p",[t._v("给定 x = 123，返回 321")]),t._v(" "),r("p",[t._v("给定 x = -123，返回 -321")]),t._v(" "),r("p",[t._v("给定 x = 1534236469， 返回 0")]),t._v(" "),r("hr"),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),r("p",[t._v("给")]),t._v(" "),r("p",[t._v("你")]),t._v(" "),r("p",[t._v("点")]),t._v(" "),r("p",[t._v("时")]),t._v(" "),r("p",[t._v("间")]),t._v(" "),r("p",[t._v("想")]),t._v(" "),r("p",[t._v("一")]),t._v(" "),r("p",[t._v("下")]),t._v(" "),r("hr"),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),r("p",[t._v("这部分跟位操作符，二进制有关，有兴趣可以去搜下。")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),r("h3",{attrs:{id:"github-算法仓库地址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#github-算法仓库地址","aria-hidden":"true"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://github.com/OBKoro1/Brush_algorithm",target:"_blank",rel:"noopener noreferrer"}},[t._v("github 算法仓库地址"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("2018.8.23")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"难度：简单"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#难度：简单","aria-hidden":"true"}},[this._v("#")]),this._v(" 难度：简单")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#描述","aria-hidden":"true"}},[this._v("#")]),this._v(" 描述")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"样例："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#样例：","aria-hidden":"true"}},[this._v("#")]),this._v(" 样例：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"这题很简单-自己想一下！"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#这题很简单-自己想一下！","aria-hidden":"true"}},[this._v("#")]),this._v(" 这题很简单,自己想一下！")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"这题很简单-自己想一下！-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#这题很简单-自己想一下！-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 这题很简单,自己想一下！")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"这题很简单-自己想一下！-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#这题很简单-自己想一下！-3","aria-hidden":"true"}},[this._v("#")]),this._v(" 这题很简单,自己想一下！")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"解法："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解法：","aria-hidden":"true"}},[this._v("#")]),this._v(" 解法：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("最优：转字符串 再转数组进行操作")]),this._v(" "),e("li",[this._v("看到有人用四则运算+遍历反转整数，会把这个解法放到下面")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"提示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提示","aria-hidden":"true"}},[this._v("#")]),this._v(" 提示:")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("p",[t._v("整数溢出的值为"),r("code",[t._v("Math.pow(2, 31) - 1")]),t._v("和"),r("code",[t._v("Math.pow(-2, 31) + 1")]),t._v("，转为数字："),r("code",[t._v("2147483647")]),t._v("和"),r("code",[t._v("-2147483647")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"code"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#code","aria-hidden":"true"}},[this._v("#")]),this._v(" code:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[e("p",[this._v("转数组操作：")]),this._v(" "),e("pre",[e("code",[this._v("const reverseInteger = (n) => {\n    if (n < 0) {\n        n = n.toString().split('-')[1]; // 负数提取数字\n        n = '-' + [...n].reverse().join('');\n        n = +n; // 转数字\n    } else {\n        n = n.toString(); // 转字符\n        n = +[...n].reverse().join(''); // 转为数组 颠倒数组 再合字符 最后转数字\n    }\n    if (n >= Math.pow(2, 31) - 1 || n <= Math.pow(-2, 31) + 1) { // 判断溢出\n        return 0;\n    }\n    return n;\n}\n")])])]),this._v(" "),e("li",[e("p",[this._v("遍历，一位一位颠倒：")]),this._v(" "),e("pre",[e("code",[this._v("const reverseInteger = function (n) {\n    if (n === 0) return 0;\n    let res = 0\n    while (n !== 0) {\n        // 从个位起一位一位的颠倒\n        res = res * 10 + n % 10;\n        n = parseInt(n / 10);  // n除以10， 一位数转化完成 到最后小于1 被转成0 退出循环\n    }\n    if (res >= 2147483647 || res <= -2147483647) {\n        return 0;\n    }\n    return res;\n}\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"转数组操作运行效率也更高点："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#转数组操作运行效率也更高点：","aria-hidden":"true"}},[this._v("#")]),this._v(" 转数组操作运行效率也更高点：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"http://ww1.sinaimg.cn/large/005Y4rCogy1fujnet3b8vj318z0kh41p.jpg",alt:""}})])}],!1,null,null,null);s.options.__file="html5.md";e.default=s.exports}}]);